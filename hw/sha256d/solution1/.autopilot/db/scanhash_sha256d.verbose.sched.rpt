

================================================================
== Vivado HLS Report for 'scanhash_sha256d'
================================================================
* Date:           Fri Apr 26 15:35:03 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        sha256d
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z045ffg900-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.013|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------------+-----+---------------+---------+
    |       Latency       |       Interval      | Pipeline|
    | min |      max      | min |      max      |   Type  |
    +-----+---------------+-----+---------------+---------+
    |  668|  1556000000279|  668|  1556000000279|   none  |
    +-----+---------------+-----+---------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+---------------+----------+-----------+-----------+----------------+----------+
        |          |       Latency       | Iteration|  Initiation Interval  |      Trip      |          |
        | Loop Name| min |      max      |  Latency |  achieved |   target  |      Count     | Pipelined|
        +----------+-----+---------------+----------+-----------+-----------+----------------+----------+
        |- Loop 1  |   80|             80|         5|          -|          -|              16|    no    |
        |- Loop 2  |  391|  1556000000002|       389|          -|          -| 1 ~ 4000000000 |    no    |
        +----------+-----+---------------+----------+-----------+-----------+----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!exitcond)
	8  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	3  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	9  / (tmp_76 & tmp_77)

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%data_15 = alloca i32"   --->   Operation 12 'alloca' 'data_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%data_15_1 = alloca i32"   --->   Operation 13 'alloca' 'data_15_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%data_15_2 = alloca i32"   --->   Operation 14 'alloca' 'data_15_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%upper_15 = alloca i32"   --->   Operation 15 'alloca' 'upper_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%data_15_3 = alloca i32"   --->   Operation 16 'alloca' 'data_15_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%data_15_4 = alloca i32"   --->   Operation 17 'alloca' 'data_15_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%data_15_5 = alloca i32"   --->   Operation 18 'alloca' 'data_15_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%data_15_6 = alloca i32"   --->   Operation 19 'alloca' 'data_15_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%data_15_7 = alloca i32"   --->   Operation 20 'alloca' 'data_15_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%data_15_8 = alloca i32"   --->   Operation 21 'alloca' 'data_15_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%data_15_9 = alloca i32"   --->   Operation 22 'alloca' 'data_15_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%data_15_10 = alloca i32"   --->   Operation 23 'alloca' 'data_15_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%data_15_11 = alloca i32"   --->   Operation 24 'alloca' 'data_15_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%data_15_12 = alloca i32"   --->   Operation 25 'alloca' 'data_15_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%data_15_13 = alloca i32"   --->   Operation 26 'alloca' 'data_15_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%data_15_14 = alloca i32"   --->   Operation 27 'alloca' 'data_15_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%upper_15_1 = alloca i32"   --->   Operation 28 'alloca' 'upper_15_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%upper_15_2 = alloca i32"   --->   Operation 29 'alloca' 'upper_15_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%upper_15_3 = alloca i32"   --->   Operation 30 'alloca' 'upper_15_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%upper_15_4 = alloca i32"   --->   Operation 31 'alloca' 'upper_15_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%upper_15_5 = alloca i32"   --->   Operation 32 'alloca' 'upper_15_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%upper_15_6 = alloca i32"   --->   Operation 33 'alloca' 'upper_15_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%upper_15_7 = alloca i32"   --->   Operation 34 'alloca' 'upper_15_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%upper_15_8 = alloca i32"   --->   Operation 35 'alloca' 'upper_15_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%upper_15_9 = alloca i32"   --->   Operation 36 'alloca' 'upper_15_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%upper_15_10 = alloca i32"   --->   Operation 37 'alloca' 'upper_15_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%upper_15_11 = alloca i32"   --->   Operation 38 'alloca' 'upper_15_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%upper_15_12 = alloca i32"   --->   Operation 39 'alloca' 'upper_15_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%upper_15_13 = alloca i32"   --->   Operation 40 'alloca' 'upper_15_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%upper_15_14 = alloca i32"   --->   Operation 41 'alloca' 'upper_15_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%upper_15_15 = alloca i32"   --->   Operation 42 'alloca' 'upper_15_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%work_addr = getelementptr [32 x i32]* %work, i64 0, i64 19" [sha256d/sha256d.cpp:603]   --->   Operation 43 'getelementptr' 'work_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [2/2] (1.75ns)   --->   "%first_nonce = load i32* %work_addr, align 4" [sha256d/sha256d.cpp:603]   --->   Operation 44 'load' 'first_nonce' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%target_addr = getelementptr [8 x i32]* %target, i64 0, i64 7" [sha256d/sha256d.cpp:604]   --->   Operation 45 'getelementptr' 'target_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [2/2] (1.75ns)   --->   "%Htarg = load i32* %target_addr, align 4" [sha256d/sha256d.cpp:604]   --->   Operation 46 'load' 'Htarg' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>

State 2 <SV = 1> <Delay = 3.65>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x i32]* %work) nounwind, !map !17"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %target) nounwind, !map !23"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_nonce) nounwind, !map !29"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %num_hashes) nounwind, !map !35"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !41"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @scanhash_sha256d_str) nounwind"   --->   Operation 52 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.00ns)   --->   "%max_nonce_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_nonce) nounwind" [sha256d/sha256d.cpp:576]   --->   Operation 53 'read' 'max_nonce_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i32]* %work, [1 x i8]* @p_str, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [sha256d/sha256d.cpp:578]   --->   Operation 54 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([32 x i32]* %work, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:578]   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecMemCore([8 x i32]* %target, [1 x i8]* @p_str, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [sha256d/sha256d.cpp:579]   --->   Operation 56 'specmemcore' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([8 x i32]* %target, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:579]   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_nonce, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:580]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %num_hashes, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:581]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:582]   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/2] (1.75ns)   --->   "%first_nonce = load i32* %work_addr, align 4" [sha256d/sha256d.cpp:603]   --->   Operation 61 'load' 'first_nonce' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 62 [1/2] (1.75ns)   --->   "%Htarg = load i32* %target_addr, align 4" [sha256d/sha256d.cpp:604]   --->   Operation 62 'load' 'Htarg' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 63 [1/1] (1.89ns)   --->   "%n = add i32 %first_nonce, -1" [sha256d/sha256d.cpp:605]   --->   Operation 63 'add' 'n' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.46ns)   --->   "br label %branch32" [sha256d/sha256d.cpp:609]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.46>

State 3 <SV = 2> <Delay = 2.40>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%i = phi i5 [ 0, %0 ], [ %i_2, %branch32.backedge ]"   --->   Operation 65 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.97ns)   --->   "%exitcond = icmp eq i5 %i, -16" [sha256d/sha256d.cpp:609]   --->   Operation 66 'icmp' 'exitcond' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 67 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (1.02ns)   --->   "%i_2 = add i5 %i, 1" [sha256d/sha256d.cpp:609]   --->   Operation 68 'add' 'i_2' <Predicate = true> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %2, label %1" [sha256d/sha256d.cpp:609]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.64ns)   --->   "%tmp_72 = xor i5 %i, -16" [sha256d/sha256d.cpp:611]   --->   Operation 70 'xor' 'tmp_72' <Predicate = (!exitcond)> <Delay = 0.64> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_73 = zext i5 %tmp_72 to i64" [sha256d/sha256d.cpp:611]   --->   Operation 71 'zext' 'tmp_73' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%work_addr_1 = getelementptr [32 x i32]* %work, i64 0, i64 %tmp_73" [sha256d/sha256d.cpp:611]   --->   Operation 72 'getelementptr' 'work_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 73 [2/2] (1.75ns)   --->   "%data_3 = load i32* %work_addr_1, align 4" [sha256d/sha256d.cpp:611]   --->   Operation 73 'load' 'data_3' <Predicate = (!exitcond)> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%upper_15_load = load i32* %upper_15"   --->   Operation 74 'load' 'upper_15_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%upper_15_1_load = load i32* %upper_15_1"   --->   Operation 75 'load' 'upper_15_1_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%upper_15_2_load = load i32* %upper_15_2"   --->   Operation 76 'load' 'upper_15_2_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%upper_15_3_load = load i32* %upper_15_3"   --->   Operation 77 'load' 'upper_15_3_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%upper_15_4_load = load i32* %upper_15_4"   --->   Operation 78 'load' 'upper_15_4_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%upper_15_5_load = load i32* %upper_15_5"   --->   Operation 79 'load' 'upper_15_5_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%upper_15_6_load = load i32* %upper_15_6"   --->   Operation 80 'load' 'upper_15_6_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%upper_15_7_load = load i32* %upper_15_7"   --->   Operation 81 'load' 'upper_15_7_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%upper_15_8_load = load i32* %upper_15_8"   --->   Operation 82 'load' 'upper_15_8_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%upper_15_9_load = load i32* %upper_15_9"   --->   Operation 83 'load' 'upper_15_9_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%upper_15_10_load = load i32* %upper_15_10"   --->   Operation 84 'load' 'upper_15_10_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%upper_15_11_load = load i32* %upper_15_11"   --->   Operation 85 'load' 'upper_15_11_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%upper_15_12_load = load i32* %upper_15_12"   --->   Operation 86 'load' 'upper_15_12_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%upper_15_13_load = load i32* %upper_15_13"   --->   Operation 87 'load' 'upper_15_13_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%upper_15_14_load = load i32* %upper_15_14"   --->   Operation 88 'load' 'upper_15_14_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%upper_15_15_load = load i32* %upper_15_15"   --->   Operation 89 'load' 'upper_15_15_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 90 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %upper_15_9_load, i32 %upper_15_10_load, i32 %upper_15_11_load, i32 %upper_15_12_load, i32 %upper_15_13_load, i32 %upper_15_14_load, i32 %upper_15_15_load, i32 %upper_15_8_load, i32 %upper_15_7_load, i32 %upper_15_6_load, i32 %upper_15_5_load, i32 %upper_15_4_load, i32 %upper_15_3_load, i32 %upper_15_2_load, i32 %upper_15_1_load, i32 %upper_15_load) nounwind"   --->   Operation 90 'call' 'call_ret' <Predicate = (exitcond)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.75>
ST_4 : Operation 91 [1/2] (1.75ns)   --->   "%data_3 = load i32* %work_addr_1, align 4" [sha256d/sha256d.cpp:611]   --->   Operation 91 'load' 'data_3' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_74 = zext i5 %i to i64" [sha256d/sha256d.cpp:611]   --->   Operation 92 'zext' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_94 = trunc i5 %i to i4" [sha256d/sha256d.cpp:611]   --->   Operation 93 'trunc' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (1.07ns)   --->   "switch i4 %tmp_94, label %branch15 [
    i4 0, label %branch0
    i4 1, label %branch1
    i4 2, label %branch2
    i4 3, label %branch3
    i4 4, label %branch4
    i4 5, label %branch5
    i4 6, label %branch6
    i4 7, label %branch7
    i4 -8, label %branch8
    i4 -7, label %branch9
    i4 -6, label %branch10
    i4 -5, label %branch11
    i4 -4, label %branch12
    i4 -3, label %branch13
    i4 -2, label %branch14
  ]" [sha256d/sha256d.cpp:611]   --->   Operation 94 'switch' <Predicate = true> <Delay = 1.07>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_13" [sha256d/sha256d.cpp:611]   --->   Operation 95 'store' <Predicate = (tmp_94 == 14)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 96 'br' <Predicate = (tmp_94 == 14)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_12" [sha256d/sha256d.cpp:611]   --->   Operation 97 'store' <Predicate = (tmp_94 == 13)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 98 'br' <Predicate = (tmp_94 == 13)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_11" [sha256d/sha256d.cpp:611]   --->   Operation 99 'store' <Predicate = (tmp_94 == 12)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 100 'br' <Predicate = (tmp_94 == 12)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_10" [sha256d/sha256d.cpp:611]   --->   Operation 101 'store' <Predicate = (tmp_94 == 11)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 102 'br' <Predicate = (tmp_94 == 11)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_9" [sha256d/sha256d.cpp:611]   --->   Operation 103 'store' <Predicate = (tmp_94 == 10)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 104 'br' <Predicate = (tmp_94 == 10)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_8" [sha256d/sha256d.cpp:611]   --->   Operation 105 'store' <Predicate = (tmp_94 == 9)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 106 'br' <Predicate = (tmp_94 == 9)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_7" [sha256d/sha256d.cpp:611]   --->   Operation 107 'store' <Predicate = (tmp_94 == 8)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 108 'br' <Predicate = (tmp_94 == 8)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_6" [sha256d/sha256d.cpp:611]   --->   Operation 109 'store' <Predicate = (tmp_94 == 7)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 110 'br' <Predicate = (tmp_94 == 7)> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_5" [sha256d/sha256d.cpp:611]   --->   Operation 111 'store' <Predicate = (tmp_94 == 6)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 112 'br' <Predicate = (tmp_94 == 6)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_4" [sha256d/sha256d.cpp:611]   --->   Operation 113 'store' <Predicate = (tmp_94 == 5)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 114 'br' <Predicate = (tmp_94 == 5)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_3" [sha256d/sha256d.cpp:611]   --->   Operation 115 'store' <Predicate = (tmp_94 == 4)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 116 'br' <Predicate = (tmp_94 == 4)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_2" [sha256d/sha256d.cpp:611]   --->   Operation 117 'store' <Predicate = (tmp_94 == 2)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 118 'br' <Predicate = (tmp_94 == 2)> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_1" [sha256d/sha256d.cpp:611]   --->   Operation 119 'store' <Predicate = (tmp_94 == 1)> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 120 'br' <Predicate = (tmp_94 == 1)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15" [sha256d/sha256d.cpp:611]   --->   Operation 121 'store' <Predicate = (tmp_94 == 0)> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 122 'br' <Predicate = (tmp_94 == 0)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "store i32 %data_3, i32* %data_15_14" [sha256d/sha256d.cpp:611]   --->   Operation 123 'store' <Predicate = (tmp_94 == 15)> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "br label %branch3" [sha256d/sha256d.cpp:611]   --->   Operation 124 'br' <Predicate = (tmp_94 == 15)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.75>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%work_addr_2 = getelementptr [32 x i32]* %work, i64 0, i64 %tmp_74" [sha256d/sha256d.cpp:612]   --->   Operation 125 'getelementptr' 'work_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [2/2] (1.75ns)   --->   "%upper_0 = load i32* %work_addr_2, align 4" [sha256d/sha256d.cpp:612]   --->   Operation 126 'load' 'upper_0' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>

State 6 <SV = 5> <Delay = 1.75>
ST_6 : Operation 127 [1/2] (1.75ns)   --->   "%upper_0 = load i32* %work_addr_2, align 4" [sha256d/sha256d.cpp:612]   --->   Operation 127 'load' 'upper_0' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 128 [1/1] (1.07ns)   --->   "switch i4 %tmp_94, label %branch47 [
    i4 0, label %branch3.branch32.backedge_crit_edge
    i4 1, label %branch33
    i4 2, label %branch34
    i4 3, label %branch35
    i4 4, label %branch36
    i4 5, label %branch37
    i4 6, label %branch38
    i4 7, label %branch39
    i4 -8, label %branch40
    i4 -7, label %branch41
    i4 -6, label %branch42
    i4 -5, label %branch43
    i4 -4, label %branch44
    i4 -3, label %branch45
    i4 -2, label %branch46
  ]" [sha256d/sha256d.cpp:612]   --->   Operation 128 'switch' <Predicate = true> <Delay = 1.07>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_1" [sha256d/sha256d.cpp:612]   --->   Operation 129 'store' <Predicate = (tmp_94 == 14)> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 130 'br' <Predicate = (tmp_94 == 14)> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_2" [sha256d/sha256d.cpp:612]   --->   Operation 131 'store' <Predicate = (tmp_94 == 13)> <Delay = 0.00>
ST_6 : Operation 132 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 132 'br' <Predicate = (tmp_94 == 13)> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_3" [sha256d/sha256d.cpp:612]   --->   Operation 133 'store' <Predicate = (tmp_94 == 12)> <Delay = 0.00>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 134 'br' <Predicate = (tmp_94 == 12)> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_4" [sha256d/sha256d.cpp:612]   --->   Operation 135 'store' <Predicate = (tmp_94 == 11)> <Delay = 0.00>
ST_6 : Operation 136 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 136 'br' <Predicate = (tmp_94 == 11)> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_5" [sha256d/sha256d.cpp:612]   --->   Operation 137 'store' <Predicate = (tmp_94 == 10)> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 138 'br' <Predicate = (tmp_94 == 10)> <Delay = 0.00>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_6" [sha256d/sha256d.cpp:612]   --->   Operation 139 'store' <Predicate = (tmp_94 == 9)> <Delay = 0.00>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 140 'br' <Predicate = (tmp_94 == 9)> <Delay = 0.00>
ST_6 : Operation 141 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_7" [sha256d/sha256d.cpp:612]   --->   Operation 141 'store' <Predicate = (tmp_94 == 8)> <Delay = 0.00>
ST_6 : Operation 142 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 142 'br' <Predicate = (tmp_94 == 8)> <Delay = 0.00>
ST_6 : Operation 143 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_8" [sha256d/sha256d.cpp:612]   --->   Operation 143 'store' <Predicate = (tmp_94 == 7)> <Delay = 0.00>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 144 'br' <Predicate = (tmp_94 == 7)> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_15" [sha256d/sha256d.cpp:612]   --->   Operation 145 'store' <Predicate = (tmp_94 == 6)> <Delay = 0.00>
ST_6 : Operation 146 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 146 'br' <Predicate = (tmp_94 == 6)> <Delay = 0.00>
ST_6 : Operation 147 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_14" [sha256d/sha256d.cpp:612]   --->   Operation 147 'store' <Predicate = (tmp_94 == 5)> <Delay = 0.00>
ST_6 : Operation 148 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 148 'br' <Predicate = (tmp_94 == 5)> <Delay = 0.00>
ST_6 : Operation 149 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_13" [sha256d/sha256d.cpp:612]   --->   Operation 149 'store' <Predicate = (tmp_94 == 4)> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 150 'br' <Predicate = (tmp_94 == 4)> <Delay = 0.00>
ST_6 : Operation 151 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_12" [sha256d/sha256d.cpp:612]   --->   Operation 151 'store' <Predicate = (tmp_94 == 3)> <Delay = 0.00>
ST_6 : Operation 152 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 152 'br' <Predicate = (tmp_94 == 3)> <Delay = 0.00>
ST_6 : Operation 153 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_11" [sha256d/sha256d.cpp:612]   --->   Operation 153 'store' <Predicate = (tmp_94 == 2)> <Delay = 0.00>
ST_6 : Operation 154 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 154 'br' <Predicate = (tmp_94 == 2)> <Delay = 0.00>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_10" [sha256d/sha256d.cpp:612]   --->   Operation 155 'store' <Predicate = (tmp_94 == 1)> <Delay = 0.00>
ST_6 : Operation 156 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 156 'br' <Predicate = (tmp_94 == 1)> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15_9" [sha256d/sha256d.cpp:612]   --->   Operation 157 'store' <Predicate = (tmp_94 == 0)> <Delay = 0.00>
ST_6 : Operation 158 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 158 'br' <Predicate = (tmp_94 == 0)> <Delay = 0.00>
ST_6 : Operation 159 [1/1] (0.00ns)   --->   "store i32 %upper_0, i32* %upper_15" [sha256d/sha256d.cpp:612]   --->   Operation 159 'store' <Predicate = (tmp_94 == 15)> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "br label %branch32.backedge" [sha256d/sha256d.cpp:612]   --->   Operation 160 'br' <Predicate = (tmp_94 == 15)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 161 [1/1] (0.00ns)   --->   "br label %branch32"   --->   Operation 161 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 1.89>
ST_8 : Operation 162 [1/2] (1.89ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %upper_15_9_load, i32 %upper_15_10_load, i32 %upper_15_11_load, i32 %upper_15_12_load, i32 %upper_15_13_load, i32 %upper_15_14_load, i32 %upper_15_15_load, i32 %upper_15_8_load, i32 %upper_15_7_load, i32 %upper_15_6_load, i32 %upper_15_5_load, i32 %upper_15_4_load, i32 %upper_15_3_load, i32 %upper_15_2_load, i32 %upper_15_1_load, i32 %upper_15_load) nounwind"   --->   Operation 162 'call' 'call_ret' <Predicate = true> <Delay = 1.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 163 [1/1] (0.00ns)   --->   "%midstate_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0"   --->   Operation 163 'extractvalue' 'midstate_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 164 [1/1] (0.00ns)   --->   "%midstate_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1"   --->   Operation 164 'extractvalue' 'midstate_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "%midstate_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2"   --->   Operation 165 'extractvalue' 'midstate_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 166 [1/1] (0.00ns)   --->   "%midstate_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3"   --->   Operation 166 'extractvalue' 'midstate_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 167 [1/1] (0.00ns)   --->   "%midstate_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4"   --->   Operation 167 'extractvalue' 'midstate_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 168 [1/1] (0.00ns)   --->   "%midstate_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5"   --->   Operation 168 'extractvalue' 'midstate_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 169 [1/1] (0.00ns)   --->   "%midstate_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6"   --->   Operation 169 'extractvalue' 'midstate_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 170 [1/1] (0.00ns)   --->   "%midstate_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7"   --->   Operation 170 'extractvalue' 'midstate_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 171 [1/1] (1.89ns)   --->   "%tmp_s = sub i32 1, %first_nonce" [sha256d/sha256d.cpp:641]   --->   Operation 171 'sub' 'tmp_s' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 172 [1/1] (0.46ns)   --->   "br label %._crit_edge1" [sha256d/sha256d.cpp:628]   --->   Operation 172 'br' <Predicate = true> <Delay = 0.46>

State 9 <SV = 4> <Delay = 4.79>
ST_9 : Operation 173 [1/1] (0.00ns)   --->   "%n1 = phi i32 [ %n, %2 ], [ %n_2, %3 ]"   --->   Operation 173 'phi' 'n1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 174 [1/1] (0.00ns)   --->   "%data_15_load = load i32* %data_15" [sha256d/sha256d.cpp:637]   --->   Operation 174 'load' 'data_15_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 175 [1/1] (0.00ns)   --->   "%data_15_1_load = load i32* %data_15_1" [sha256d/sha256d.cpp:637]   --->   Operation 175 'load' 'data_15_1_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 176 [1/1] (0.00ns)   --->   "%data_15_2_load = load i32* %data_15_2" [sha256d/sha256d.cpp:637]   --->   Operation 176 'load' 'data_15_2_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 177 [1/1] (0.00ns)   --->   "%data_15_3_load = load i32* %data_15_3" [sha256d/sha256d.cpp:637]   --->   Operation 177 'load' 'data_15_3_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 178 [1/1] (0.00ns)   --->   "%data_15_4_load = load i32* %data_15_4" [sha256d/sha256d.cpp:637]   --->   Operation 178 'load' 'data_15_4_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 179 [1/1] (0.00ns)   --->   "%data_15_5_load = load i32* %data_15_5" [sha256d/sha256d.cpp:637]   --->   Operation 179 'load' 'data_15_5_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 180 [1/1] (0.00ns)   --->   "%data_15_6_load = load i32* %data_15_6" [sha256d/sha256d.cpp:637]   --->   Operation 180 'load' 'data_15_6_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 181 [1/1] (0.00ns)   --->   "%data_15_7_load = load i32* %data_15_7" [sha256d/sha256d.cpp:637]   --->   Operation 181 'load' 'data_15_7_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 182 [1/1] (0.00ns)   --->   "%data_15_8_load = load i32* %data_15_8" [sha256d/sha256d.cpp:637]   --->   Operation 182 'load' 'data_15_8_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 183 [1/1] (0.00ns)   --->   "%data_15_9_load = load i32* %data_15_9" [sha256d/sha256d.cpp:637]   --->   Operation 183 'load' 'data_15_9_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 184 [1/1] (0.00ns)   --->   "%data_15_10_load = load i32* %data_15_10" [sha256d/sha256d.cpp:637]   --->   Operation 184 'load' 'data_15_10_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 185 [1/1] (0.00ns)   --->   "%data_15_11_load = load i32* %data_15_11" [sha256d/sha256d.cpp:637]   --->   Operation 185 'load' 'data_15_11_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 186 [1/1] (0.00ns)   --->   "%data_15_12_load = load i32* %data_15_12" [sha256d/sha256d.cpp:637]   --->   Operation 186 'load' 'data_15_12_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 187 [1/1] (0.00ns)   --->   "%data_15_13_load = load i32* %data_15_13" [sha256d/sha256d.cpp:637]   --->   Operation 187 'load' 'data_15_13_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 188 [1/1] (0.00ns)   --->   "%data_15_14_load = load i32* %data_15_14" [sha256d/sha256d.cpp:637]   --->   Operation 188 'load' 'data_15_14_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 189 [1/1] (1.89ns)   --->   "%n_2 = add i32 1, %n1" [sha256d/sha256d.cpp:632]   --->   Operation 189 'add' 'n_2' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 190 [2/2] (0.46ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform.1(i32 %midstate_0, i32 %midstate_1, i32 %midstate_2, i32 %midstate_3, i32 %midstate_4, i32 %midstate_5, i32 %midstate_6, i32 %midstate_7, i32 %data_15_load, i32 %data_15_1_load, i32 %data_15_2_load, i32 %n_2, i32 %data_15_3_load, i32 %data_15_4_load, i32 %data_15_5_load, i32 %data_15_6_load, i32 %data_15_7_load, i32 %data_15_8_load, i32 %data_15_9_load, i32 %data_15_10_load, i32 %data_15_11_load, i32 %data_15_12_load, i32 %data_15_13_load, i32 %data_15_14_load) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 190 'call' 'call_ret1' <Predicate = true> <Delay = 0.46> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 191 [1/1] (1.75ns)   --->   "store i32 %n_2, i32* %work_addr, align 4" [sha256d/sha256d.cpp:640]   --->   Operation 191 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 192 [1/1] (1.89ns)   --->   "%tmp_75 = add i32 %n_2, %tmp_s" [sha256d/sha256d.cpp:641]   --->   Operation 192 'add' 'tmp_75' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 193 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %num_hashes, i32 %tmp_75) nounwind" [sha256d/sha256d.cpp:641]   --->   Operation 193 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 10 <SV = 5> <Delay = 1.89>
ST_10 : Operation 194 [1/2] (1.89ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform.1(i32 %midstate_0, i32 %midstate_1, i32 %midstate_2, i32 %midstate_3, i32 %midstate_4, i32 %midstate_5, i32 %midstate_6, i32 %midstate_7, i32 %data_15_load, i32 %data_15_1_load, i32 %data_15_2_load, i32 %n_2, i32 %data_15_3_load, i32 %data_15_4_load, i32 %data_15_5_load, i32 %data_15_6_load, i32 %data_15_7_load, i32 %data_15_8_load, i32 %data_15_9_load, i32 %data_15_10_load, i32 %data_15_11_load, i32 %data_15_12_load, i32 %data_15_13_load, i32 %data_15_14_load) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 194 'call' 'call_ret1' <Predicate = true> <Delay = 1.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 195 [1/1] (0.00ns)   --->   "%hash_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0" [sha256d/sha256d.cpp:637]   --->   Operation 195 'extractvalue' 'hash_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 196 [1/1] (0.00ns)   --->   "%hash_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1" [sha256d/sha256d.cpp:637]   --->   Operation 196 'extractvalue' 'hash_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 197 [1/1] (0.00ns)   --->   "%hash_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2" [sha256d/sha256d.cpp:637]   --->   Operation 197 'extractvalue' 'hash_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 198 [1/1] (0.00ns)   --->   "%hash_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3" [sha256d/sha256d.cpp:637]   --->   Operation 198 'extractvalue' 'hash_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 199 [1/1] (0.00ns)   --->   "%hash_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4" [sha256d/sha256d.cpp:637]   --->   Operation 199 'extractvalue' 'hash_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 200 [1/1] (0.00ns)   --->   "%hash_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5" [sha256d/sha256d.cpp:637]   --->   Operation 200 'extractvalue' 'hash_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 201 [1/1] (0.00ns)   --->   "%hash_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6" [sha256d/sha256d.cpp:637]   --->   Operation 201 'extractvalue' 'hash_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 202 [1/1] (0.00ns)   --->   "%hash_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7" [sha256d/sha256d.cpp:637]   --->   Operation 202 'extractvalue' 'hash_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 203 [2/2] (0.00ns)   --->   "%v_assign = call fastcc i32 @sha256_transform.16(i32 %hash_0, i32 %hash_1, i32 %hash_2, i32 %hash_3, i32 %hash_4, i32 %hash_5, i32 %hash_6, i32 %hash_7) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 203 'call' 'v_assign' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 6> <Delay = 4.32>
ST_11 : Operation 204 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind" [sha256d/sha256d.cpp:629]   --->   Operation 204 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i64 4000000000, i32 2000000000, [1 x i8]* @p_str1) nounwind" [sha256d/sha256d.cpp:630]   --->   Operation 205 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 206 [1/2] (1.89ns)   --->   "%v_assign = call fastcc i32 @sha256_transform.16(i32 %hash_0, i32 %hash_1, i32 %hash_2, i32 %hash_3, i32 %hash_4, i32 %hash_5, i32 %hash_6, i32 %hash_7) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 206 'call' 'v_assign' <Predicate = true> <Delay = 1.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%tmp_95 = trunc i32 %v_assign to i8" [sha256d/sha256d.cpp:637]   --->   Operation 207 'trunc' 'tmp_95' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns)   --->   "%v_3_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %v_assign, i32 24, i32 31) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 208 'partselect' 'v_3_i' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (0.00ns)   --->   "%v_1_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %v_assign, i32 8, i32 15) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 209 'partselect' 'v_1_i' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 210 [1/1] (0.00ns)   --->   "%v_2_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %v_assign, i32 16, i32 23) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 210 'partselect' 'v_2_i' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 211 [1/1] (0.00ns)   --->   "%high = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_95, i8 %v_1_i, i8 %v_2_i, i8 %v_3_i) nounwind" [sha256d/sha256d.cpp:637]   --->   Operation 211 'bitconcatenate' 'high' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 212 [1/1] (1.96ns)   --->   "%tmp_76 = icmp ugt i32 %high, %Htarg" [sha256d/sha256d.cpp:643]   --->   Operation 212 'icmp' 'tmp_76' <Predicate = true> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 213 [1/1] (0.46ns)   --->   "br i1 %tmp_76, label %3, label %._crit_edge" [sha256d/sha256d.cpp:643]   --->   Operation 213 'br' <Predicate = true> <Delay = 0.46>
ST_11 : Operation 214 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp) nounwind" [sha256d/sha256d.cpp:654]   --->   Operation 214 'specregionend' 'empty_8' <Predicate = (tmp_76)> <Delay = 0.00>
ST_11 : Operation 215 [1/1] (1.96ns)   --->   "%tmp_77 = icmp ult i32 %n_2, %max_nonce_read" [sha256d/sha256d.cpp:654]   --->   Operation 215 'icmp' 'tmp_77' <Predicate = (tmp_76)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 216 [1/1] (0.46ns)   --->   "br i1 %tmp_77, label %._crit_edge1, label %._crit_edge" [sha256d/sha256d.cpp:654]   --->   Operation 216 'br' <Predicate = (tmp_76)> <Delay = 0.46>
ST_11 : Operation 217 [1/1] (0.00ns)   --->   "%p_0 = phi i1 [ true, %._crit_edge1 ], [ false, %3 ]"   --->   Operation 217 'phi' 'p_0' <Predicate = (!tmp_77) | (!tmp_76)> <Delay = 0.00>
ST_11 : Operation 218 [1/1] (0.00ns)   --->   "%p_0_cast = zext i1 %p_0 to i32" [sha256d/sha256d.cpp:659]   --->   Operation 218 'zext' 'p_0_cast' <Predicate = (!tmp_77) | (!tmp_76)> <Delay = 0.00>
ST_11 : Operation 219 [1/1] (0.00ns)   --->   "ret i32 %p_0_cast" [sha256d/sha256d.cpp:659]   --->   Operation 219 'ret' <Predicate = (!tmp_77) | (!tmp_76)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.75ns
The critical path consists of the following:
	'getelementptr' operation ('work_addr', sha256d/sha256d.cpp:603) [50]  (0 ns)
	'load' operation ('first_nonce', sha256d/sha256d.cpp:603) on array 'work' [51]  (1.75 ns)

 <State 2>: 3.65ns
The critical path consists of the following:
	'load' operation ('first_nonce', sha256d/sha256d.cpp:603) on array 'work' [51]  (1.75 ns)
	'add' operation ('n', sha256d/sha256d.cpp:605) [54]  (1.9 ns)

 <State 3>: 2.4ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256d/sha256d.cpp:609) [57]  (0 ns)
	'xor' operation ('tmp_72', sha256d/sha256d.cpp:611) [63]  (0.647 ns)
	'getelementptr' operation ('work_addr_1', sha256d/sha256d.cpp:611) [65]  (0 ns)
	'load' operation ('data[3]', sha256d/sha256d.cpp:611) on array 'work' [66]  (1.75 ns)

 <State 4>: 1.75ns
The critical path consists of the following:
	'load' operation ('data[3]', sha256d/sha256d.cpp:611) on array 'work' [66]  (1.75 ns)
	'store' operation (sha256d/sha256d.cpp:611) of variable 'data[3]', sha256d/sha256d.cpp:611 on local variable 'data[15]' [86]  (0 ns)

 <State 5>: 1.75ns
The critical path consists of the following:
	'getelementptr' operation ('work_addr_2', sha256d/sha256d.cpp:612) [116]  (0 ns)
	'load' operation ('upper[0]', sha256d/sha256d.cpp:612) on array 'work' [117]  (1.75 ns)

 <State 6>: 1.75ns
The critical path consists of the following:
	'load' operation ('upper[0]', sha256d/sha256d.cpp:612) on array 'work' [117]  (1.75 ns)
	'store' operation (sha256d/sha256d.cpp:612) of variable 'upper[0]', sha256d/sha256d.cpp:612 on local variable 'upper[15]' [141]  (0 ns)

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 1.9ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'sha256_transform' [186]  (1.9 ns)

 <State 9>: 4.79ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', sha256d/sha256d.cpp:605) ('n', sha256d/sha256d.cpp:632) [198]  (0 ns)
	'add' operation ('n', sha256d/sha256d.cpp:632) [216]  (1.9 ns)
	'add' operation ('tmp_75', sha256d/sha256d.cpp:641) [233]  (1.9 ns)
	s_axi write on port 'num_hashes' (sha256d/sha256d.cpp:641) [234]  (1 ns)

 <State 10>: 1.9ns
The critical path consists of the following:
	'call' operation ('call_ret1', sha256d/sha256d.cpp:637) to 'sha256_transform.1' [217]  (1.9 ns)

 <State 11>: 4.33ns
The critical path consists of the following:
	'call' operation ('v', sha256d/sha256d.cpp:637) to 'sha256_transform.16' [226]  (1.9 ns)
	'icmp' operation ('tmp_76', sha256d/sha256d.cpp:643) [235]  (1.97 ns)
	multiplexor before 'phi' operation ('p_0') [242]  (0.466 ns)
	'phi' operation ('p_0') [242]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
