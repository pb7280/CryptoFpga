// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scanhash_sha256d_HH_
#define _scanhash_sha256d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform_1.h"
#include "sha256_transform.h"
#include "sha256_transform_16.h"
#include "scanhash_sha256d_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 9,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct scanhash_sha256d : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    scanhash_sha256d(sc_module_name name);
    SC_HAS_PROCESS(scanhash_sha256d);

    ~scanhash_sha256d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    scanhash_sha256d_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* scanhash_sha256d_CTRL_BUS_s_axi_U;
    sha256_transform_1* grp_sha256_transform_1_fu_333;
    sha256_transform* grp_sha256_transform_fu_361;
    sha256_transform_16* grp_sha256_transform_16_fu_381;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<5> > work_address0;
    sc_signal< sc_logic > work_ce0;
    sc_signal< sc_logic > work_we0;
    sc_signal< sc_lv<32> > work_q0;
    sc_signal< sc_lv<3> > target_address0;
    sc_signal< sc_logic > target_ce0;
    sc_signal< sc_lv<32> > target_q0;
    sc_signal< sc_lv<32> > max_nonce;
    sc_signal< sc_lv<32> > num_hashes;
    sc_signal< sc_logic > num_hashes_ap_vld;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_lv<5> > work_addr_reg_1045;
    sc_signal< sc_lv<32> > max_nonce_read_reg_1055;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > first_nonce_reg_1060;
    sc_signal< sc_lv<32> > Htarg_reg_1065;
    sc_signal< sc_lv<32> > n_fu_393_p2;
    sc_signal< sc_lv<32> > n_reg_1070;
    sc_signal< sc_lv<5> > i_2_fu_405_p2;
    sc_signal< sc_lv<5> > i_2_reg_1078;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_399_p2;
    sc_signal< sc_lv<64> > tmp_74_fu_486_p1;
    sc_signal< sc_lv<64> > tmp_74_reg_1168;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > tmp_94_fu_490_p1;
    sc_signal< sc_lv<4> > tmp_94_reg_1173;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > midstate_0_reg_1182;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_sha256_transform_fu_361_ap_ready;
    sc_signal< sc_logic > grp_sha256_transform_fu_361_ap_done;
    sc_signal< sc_lv<32> > midstate_1_reg_1187;
    sc_signal< sc_lv<32> > midstate_2_reg_1192;
    sc_signal< sc_lv<32> > midstate_3_reg_1197;
    sc_signal< sc_lv<32> > midstate_4_reg_1202;
    sc_signal< sc_lv<32> > midstate_5_reg_1207;
    sc_signal< sc_lv<32> > midstate_6_reg_1212;
    sc_signal< sc_lv<32> > midstate_7_reg_1217;
    sc_signal< sc_lv<32> > tmp_s_fu_681_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_1222;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > n_2_fu_746_p2;
    sc_signal< sc_lv<32> > n_2_reg_1302;
    sc_signal< sc_lv<32> > hash_0_reg_1309;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_sha256_transform_1_fu_333_ap_ready;
    sc_signal< sc_logic > grp_sha256_transform_1_fu_333_ap_done;
    sc_signal< sc_lv<32> > hash_1_reg_1314;
    sc_signal< sc_lv<32> > hash_2_reg_1319;
    sc_signal< sc_lv<32> > hash_3_reg_1324;
    sc_signal< sc_lv<32> > hash_4_reg_1329;
    sc_signal< sc_lv<32> > hash_5_reg_1334;
    sc_signal< sc_lv<32> > hash_6_reg_1339;
    sc_signal< sc_lv<32> > hash_7_reg_1344;
    sc_signal< sc_logic > grp_sha256_transform_1_fu_333_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_1_fu_333_ap_idle;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_transform_1_fu_333_ap_return_7;
    sc_signal< sc_logic > grp_sha256_transform_fu_361_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_fu_361_ap_idle;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_361_ap_return_7;
    sc_signal< sc_logic > grp_sha256_transform_16_fu_381_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_16_fu_381_ap_done;
    sc_signal< sc_logic > grp_sha256_transform_16_fu_381_ap_idle;
    sc_signal< sc_logic > grp_sha256_transform_16_fu_381_ap_ready;
    sc_signal< sc_lv<32> > grp_sha256_transform_16_fu_381_ap_return;
    sc_signal< sc_lv<5> > i_reg_301;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > n1_reg_313;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > tmp_76_fu_846_p2;
    sc_signal< sc_lv<1> > tmp_77_fu_851_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0_phi_fu_325_p4;
    sc_signal< sc_logic > grp_sha256_transform_1_fu_333_ap_start_reg;
    sc_signal< sc_logic > grp_sha256_transform_fu_361_ap_start_reg;
    sc_signal< sc_logic > grp_sha256_transform_16_fu_381_ap_start_reg;
    sc_signal< sc_lv<64> > tmp_73_fu_417_p1;
    sc_signal< sc_lv<32> > data_15_fu_120;
    sc_signal< sc_lv<32> > data_15_1_fu_124;
    sc_signal< sc_lv<32> > data_15_2_fu_128;
    sc_signal< sc_lv<32> > upper_15_fu_132;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > data_15_3_fu_136;
    sc_signal< sc_lv<32> > data_15_4_fu_140;
    sc_signal< sc_lv<32> > data_15_5_fu_144;
    sc_signal< sc_lv<32> > data_15_6_fu_148;
    sc_signal< sc_lv<32> > data_15_7_fu_152;
    sc_signal< sc_lv<32> > data_15_8_fu_156;
    sc_signal< sc_lv<32> > data_15_9_fu_160;
    sc_signal< sc_lv<32> > data_15_10_fu_164;
    sc_signal< sc_lv<32> > data_15_11_fu_168;
    sc_signal< sc_lv<32> > data_15_12_fu_172;
    sc_signal< sc_lv<32> > data_15_13_fu_176;
    sc_signal< sc_lv<32> > data_15_14_fu_180;
    sc_signal< sc_lv<32> > upper_15_1_fu_184;
    sc_signal< sc_lv<32> > upper_15_2_fu_188;
    sc_signal< sc_lv<32> > upper_15_3_fu_192;
    sc_signal< sc_lv<32> > upper_15_4_fu_196;
    sc_signal< sc_lv<32> > upper_15_5_fu_200;
    sc_signal< sc_lv<32> > upper_15_6_fu_204;
    sc_signal< sc_lv<32> > upper_15_7_fu_208;
    sc_signal< sc_lv<32> > upper_15_8_fu_212;
    sc_signal< sc_lv<32> > upper_15_9_fu_216;
    sc_signal< sc_lv<32> > upper_15_10_fu_220;
    sc_signal< sc_lv<32> > upper_15_11_fu_224;
    sc_signal< sc_lv<32> > upper_15_12_fu_228;
    sc_signal< sc_lv<32> > upper_15_13_fu_232;
    sc_signal< sc_lv<32> > upper_15_14_fu_236;
    sc_signal< sc_lv<32> > upper_15_15_fu_240;
    sc_signal< sc_lv<5> > tmp_72_fu_411_p2;
    sc_signal< sc_lv<8> > tmp_95_fu_800_p1;
    sc_signal< sc_lv<8> > v_1_i_fu_814_p4;
    sc_signal< sc_lv<8> > v_2_i_fu_824_p4;
    sc_signal< sc_lv<8> > v_3_i_fu_804_p4;
    sc_signal< sc_lv<32> > high_fu_834_p5;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<64> ap_const_lv64_13;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0_phi_fu_325_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_exitcond_fu_399_p2();
    void thread_grp_sha256_transform_16_fu_381_ap_start();
    void thread_grp_sha256_transform_1_fu_333_ap_start();
    void thread_grp_sha256_transform_fu_361_ap_start();
    void thread_high_fu_834_p5();
    void thread_i_2_fu_405_p2();
    void thread_n_2_fu_746_p2();
    void thread_n_fu_393_p2();
    void thread_num_hashes();
    void thread_num_hashes_ap_vld();
    void thread_target_address0();
    void thread_target_ce0();
    void thread_tmp_72_fu_411_p2();
    void thread_tmp_73_fu_417_p1();
    void thread_tmp_74_fu_486_p1();
    void thread_tmp_76_fu_846_p2();
    void thread_tmp_77_fu_851_p2();
    void thread_tmp_94_fu_490_p1();
    void thread_tmp_95_fu_800_p1();
    void thread_tmp_s_fu_681_p2();
    void thread_v_1_i_fu_814_p4();
    void thread_v_2_i_fu_824_p4();
    void thread_v_3_i_fu_804_p4();
    void thread_work_addr_reg_1045();
    void thread_work_address0();
    void thread_work_ce0();
    void thread_work_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
