// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_transform_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_0_read,
        state_1_read,
        state_2_read,
        state_3_read,
        state_4_read,
        state_5_read,
        state_6_read,
        state_7_read,
        block_0_read,
        block_1_read,
        block_2_read,
        block_3_read,
        block_4_read,
        block_5_read,
        block_6_read,
        block_7_read,
        block_8_read,
        block_9_read,
        block_10_read,
        block_11_read,
        block_12_read,
        block_13_read,
        block_14_read,
        block_15_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] state_0_read;
input  [31:0] state_1_read;
input  [31:0] state_2_read;
input  [31:0] state_3_read;
input  [31:0] state_4_read;
input  [31:0] state_5_read;
input  [31:0] state_6_read;
input  [31:0] state_7_read;
input  [31:0] block_0_read;
input  [31:0] block_1_read;
input  [31:0] block_2_read;
input  [31:0] block_3_read;
input  [31:0] block_4_read;
input  [31:0] block_5_read;
input  [31:0] block_6_read;
input  [31:0] block_7_read;
input  [31:0] block_8_read;
input  [31:0] block_9_read;
input  [31:0] block_10_read;
input  [31:0] block_11_read;
input  [31:0] block_12_read;
input  [31:0] block_13_read;
input  [31:0] block_14_read;
input  [31:0] block_15_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] i_1_fu_1235_p2;
reg   [6:0] i_1_reg_3288;
wire    ap_CS_fsm_state2;
wire   [31:0] tmp_51_fu_2355_p2;
reg   [31:0] tmp_51_reg_3302;
wire    ap_CS_fsm_state3;
wire   [31:0] tmp_34_fu_2365_p66;
reg   [31:0] tmp_34_reg_3307;
wire   [31:0] tmp25_fu_2639_p2;
reg   [31:0] tmp25_reg_3312;
wire   [31:0] tmp_65_fu_2663_p2;
reg   [31:0] tmp_65_reg_3317;
wire   [31:0] e_fu_2756_p2;
wire    ap_CS_fsm_state4;
wire   [31:0] a_fu_2767_p2;
reg   [31:0] c_reg_796;
reg   [31:0] b_reg_806;
reg   [6:0] i_reg_817;
reg   [31:0] d_reg_829;
reg   [31:0] d1_reg_840;
reg   [31:0] f_reg_851;
reg   [31:0] g_reg_861;
reg   [31:0] h_reg_872;
reg   [31:0] h1_reg_883;
reg   [31:0] ap_phi_mux_W_load_phi_phi_fu_897_p96;
wire   [0:0] exitcond_fu_1229_p2;
wire   [0:0] icmp_fu_1251_p2;
wire   [5:0] tmp_66_fu_1257_p1;
reg   [31:0] W_15_fu_396;
wire   [31:0] W_0_fu_2065_p18;
wire   [5:0] tmp_57_fu_2087_p1;
reg   [31:0] W_15_17_fu_400;
reg   [31:0] W_63_fu_404;
wire   [31:0] W_16_fu_1815_p2;
reg   [31:0] W_63_49_fu_408;
reg   [31:0] W_63_50_fu_412;
reg   [31:0] W_63_51_fu_416;
reg   [31:0] W_63_52_fu_420;
reg   [31:0] W_63_53_fu_424;
reg   [31:0] W_63_54_fu_428;
reg   [31:0] W_63_55_fu_432;
reg   [31:0] W_63_56_fu_436;
reg   [31:0] W_63_57_fu_440;
reg   [31:0] W_63_58_fu_444;
reg   [31:0] W_63_59_fu_448;
reg   [31:0] W_63_60_fu_452;
reg   [31:0] W_63_61_fu_456;
reg   [31:0] W_63_62_fu_460;
reg   [31:0] W_63_63_fu_464;
reg   [31:0] W_63_64_fu_468;
reg   [31:0] W_63_65_fu_472;
reg   [31:0] W_63_66_fu_476;
reg   [31:0] W_63_67_fu_480;
reg   [31:0] W_63_68_fu_484;
reg   [31:0] W_63_69_fu_488;
reg   [31:0] W_63_70_fu_492;
reg   [31:0] W_63_71_fu_496;
reg   [31:0] W_63_72_fu_500;
reg   [31:0] W_63_73_fu_504;
reg   [31:0] W_63_74_fu_508;
reg   [31:0] W_63_75_fu_512;
reg   [31:0] W_63_76_fu_516;
reg   [31:0] W_63_77_fu_520;
reg   [31:0] W_63_78_fu_524;
reg   [31:0] W_63_79_fu_528;
reg   [31:0] W_63_80_fu_532;
reg   [31:0] W_63_81_fu_536;
reg   [31:0] W_63_82_fu_540;
reg   [31:0] W_63_83_fu_544;
reg   [31:0] W_63_84_fu_548;
reg   [31:0] W_63_85_fu_552;
reg   [31:0] W_63_86_fu_556;
reg   [31:0] W_63_87_fu_560;
reg   [31:0] W_63_88_fu_564;
reg   [31:0] W_63_89_fu_568;
reg   [31:0] W_63_90_fu_572;
reg   [31:0] W_63_91_fu_576;
reg   [31:0] W_63_92_fu_580;
reg   [31:0] W_63_93_fu_584;
reg   [31:0] W_15_18_fu_588;
reg   [31:0] W_15_19_fu_592;
reg   [31:0] W_15_20_fu_596;
reg   [31:0] W_15_21_fu_600;
reg   [31:0] W_15_22_fu_604;
reg   [31:0] W_15_23_fu_608;
reg   [31:0] W_15_24_fu_612;
reg   [31:0] W_15_25_fu_616;
reg   [31:0] W_15_26_fu_620;
reg   [31:0] W_15_27_fu_624;
reg   [31:0] W_15_28_fu_628;
reg   [31:0] W_15_29_fu_632;
reg   [31:0] W_15_30_fu_636;
reg   [31:0] W_15_31_fu_640;
reg   [31:0] W_63_94_fu_644;
reg   [31:0] W_63_95_fu_648;
wire   [2:0] tmp_fu_1241_p4;
wire   [16:0] tmp_67_fu_1271_p1;
wire   [14:0] tmp_12_fu_1261_p4;
wire   [18:0] tmp_68_fu_1293_p1;
wire   [12:0] tmp_15_fu_1283_p4;
wire   [21:0] tmp_18_fu_1305_p4;
wire   [31:0] tmp_s_fu_1315_p1;
wire   [31:0] tmp_17_fu_1297_p3;
wire   [31:0] tmp16_fu_1319_p2;
wire   [31:0] tmp_14_fu_1275_p3;
wire   [31:0] W_load_2_phi_fu_1465_p66;
wire   [6:0] tmp_70_fu_1609_p1;
wire   [24:0] tmp_25_fu_1599_p4;
wire   [17:0] tmp_71_fu_1631_p1;
wire   [13:0] tmp_28_fu_1621_p4;
wire   [28:0] tmp_31_fu_1643_p4;
wire   [31:0] tmp_60_fu_1653_p1;
wire   [31:0] tmp_30_fu_1635_p3;
wire   [31:0] tmp17_fu_1657_p2;
wire   [31:0] tmp_27_fu_1613_p3;
wire   [31:0] tmp_33_fu_1663_p2;
wire   [31:0] W_load_1_phi_fu_1331_p66;
wire   [31:0] W_load_3_phi_fu_1669_p66;
wire   [31:0] tmp_20_fu_1325_p2;
wire   [31:0] tmp19_fu_1803_p2;
wire   [31:0] tmp20_fu_1809_p2;
wire   [3:0] W_0_fu_2065_p17;
wire   [31:0] out_state_0_write_a_fu_2171_p2;
wire   [31:0] out_state_1_write_a_fu_2176_p2;
wire   [31:0] out_state_2_write_a_fu_2181_p2;
wire   [31:0] out_state_3_write_a_fu_2186_p2;
wire   [31:0] out_state_4_write_a_fu_2191_p2;
wire   [31:0] out_state_5_write_a_fu_2196_p2;
wire   [31:0] out_state_6_write_a_fu_2201_p2;
wire   [31:0] out_state_7_write_a_fu_2206_p2;
wire   [5:0] tmp_72_fu_2275_p1;
wire   [25:0] tmp_40_fu_2265_p4;
wire   [10:0] tmp_73_fu_2297_p1;
wire   [20:0] tmp_43_fu_2287_p4;
wire   [24:0] tmp_74_fu_2319_p1;
wire   [6:0] tmp_46_fu_2309_p4;
wire   [31:0] tmp_42_fu_2279_p3;
wire   [31:0] tmp_45_fu_2301_p3;
wire   [31:0] tmp21_fu_2331_p2;
wire   [31:0] tmp_47_fu_2323_p3;
wire   [31:0] tmp_49_fu_2343_p2;
wire   [31:0] tmp_50_fu_2349_p2;
wire   [5:0] tmp_75_fu_2361_p1;
wire   [31:0] tmp_35_fu_2499_p66;
wire   [31:0] tmp26_fu_2633_p2;
wire   [31:0] tmp_48_fu_2337_p2;
wire   [31:0] tmp_62_fu_2645_p2;
wire   [31:0] tmp_63_fu_2651_p2;
wire   [31:0] tmp_64_fu_2657_p2;
wire   [31:0] tmp24_fu_2669_p2;
wire   [1:0] tmp_76_fu_2688_p1;
wire   [29:0] tmp_52_fu_2678_p4;
wire   [12:0] tmp_77_fu_2710_p1;
wire   [18:0] tmp_55_fu_2700_p4;
wire   [21:0] tmp_78_fu_2732_p1;
wire   [9:0] tmp_58_fu_2722_p4;
wire   [31:0] tmp_53_fu_2692_p3;
wire   [31:0] tmp_56_fu_2714_p3;
wire   [31:0] tmp27_fu_2744_p2;
wire   [31:0] tmp_59_fu_2736_p3;
wire   [31:0] t0_fu_2673_p2;
wire   [31:0] tmp28_fu_2762_p2;
wire   [31:0] tmp_61_fu_2750_p2;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [3:0] ap_NS_fsm;
reg    ap_condition_1805;
reg    ap_condition_714;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
end

scanhash_sha256d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_bkb_U26(
    .din0(W_63_88_fu_564),
    .din1(W_63_88_fu_564),
    .din2(W_63_88_fu_564),
    .din3(W_63_88_fu_564),
    .din4(W_63_88_fu_564),
    .din5(W_63_88_fu_564),
    .din6(W_63_88_fu_564),
    .din7(W_63_88_fu_564),
    .din8(W_63_88_fu_564),
    .din9(W_63_88_fu_564),
    .din10(W_63_88_fu_564),
    .din11(W_63_88_fu_564),
    .din12(W_63_88_fu_564),
    .din13(W_63_88_fu_564),
    .din14(W_63_88_fu_564),
    .din15(W_63_88_fu_564),
    .din16(W_15_27_fu_624),
    .din17(W_15_28_fu_628),
    .din18(W_15_29_fu_632),
    .din19(W_15_30_fu_636),
    .din20(W_15_31_fu_640),
    .din21(W_15_fu_396),
    .din22(W_15_17_fu_400),
    .din23(W_63_fu_404),
    .din24(W_63_49_fu_408),
    .din25(W_63_50_fu_412),
    .din26(W_63_51_fu_416),
    .din27(W_63_52_fu_420),
    .din28(W_63_53_fu_424),
    .din29(W_63_54_fu_428),
    .din30(W_63_55_fu_432),
    .din31(W_63_56_fu_436),
    .din32(W_63_57_fu_440),
    .din33(W_63_58_fu_444),
    .din34(W_63_59_fu_448),
    .din35(W_63_60_fu_452),
    .din36(W_63_61_fu_456),
    .din37(W_63_62_fu_460),
    .din38(W_63_63_fu_464),
    .din39(W_63_64_fu_468),
    .din40(W_63_65_fu_472),
    .din41(W_63_66_fu_476),
    .din42(W_63_67_fu_480),
    .din43(W_63_68_fu_484),
    .din44(W_63_69_fu_488),
    .din45(W_63_70_fu_492),
    .din46(W_63_71_fu_496),
    .din47(W_63_72_fu_500),
    .din48(W_63_73_fu_504),
    .din49(W_63_74_fu_508),
    .din50(W_63_75_fu_512),
    .din51(W_63_76_fu_516),
    .din52(W_63_77_fu_520),
    .din53(W_63_78_fu_524),
    .din54(W_63_79_fu_528),
    .din55(W_63_80_fu_532),
    .din56(W_63_81_fu_536),
    .din57(W_63_82_fu_540),
    .din58(W_63_83_fu_544),
    .din59(W_63_84_fu_548),
    .din60(W_63_85_fu_552),
    .din61(W_63_86_fu_556),
    .din62(W_63_87_fu_560),
    .din63(W_63_88_fu_564),
    .din64(tmp_66_fu_1257_p1),
    .dout(W_load_1_phi_fu_1331_p66)
);

scanhash_sha256d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_bkb_U27(
    .din0(W_63_80_fu_532),
    .din1(W_63_80_fu_532),
    .din2(W_63_80_fu_532),
    .din3(W_63_80_fu_532),
    .din4(W_63_80_fu_532),
    .din5(W_63_80_fu_532),
    .din6(W_63_80_fu_532),
    .din7(W_63_80_fu_532),
    .din8(W_63_80_fu_532),
    .din9(W_63_80_fu_532),
    .din10(W_63_80_fu_532),
    .din11(W_63_80_fu_532),
    .din12(W_63_80_fu_532),
    .din13(W_63_80_fu_532),
    .din14(W_63_80_fu_532),
    .din15(W_63_80_fu_532),
    .din16(W_15_19_fu_592),
    .din17(W_15_20_fu_596),
    .din18(W_15_21_fu_600),
    .din19(W_15_22_fu_604),
    .din20(W_15_23_fu_608),
    .din21(W_15_24_fu_612),
    .din22(W_15_25_fu_616),
    .din23(W_15_26_fu_620),
    .din24(W_15_27_fu_624),
    .din25(W_15_28_fu_628),
    .din26(W_15_29_fu_632),
    .din27(W_15_30_fu_636),
    .din28(W_15_31_fu_640),
    .din29(W_15_fu_396),
    .din30(W_15_17_fu_400),
    .din31(W_63_fu_404),
    .din32(W_63_49_fu_408),
    .din33(W_63_50_fu_412),
    .din34(W_63_51_fu_416),
    .din35(W_63_52_fu_420),
    .din36(W_63_53_fu_424),
    .din37(W_63_54_fu_428),
    .din38(W_63_55_fu_432),
    .din39(W_63_56_fu_436),
    .din40(W_63_57_fu_440),
    .din41(W_63_58_fu_444),
    .din42(W_63_59_fu_448),
    .din43(W_63_60_fu_452),
    .din44(W_63_61_fu_456),
    .din45(W_63_62_fu_460),
    .din46(W_63_63_fu_464),
    .din47(W_63_64_fu_468),
    .din48(W_63_65_fu_472),
    .din49(W_63_66_fu_476),
    .din50(W_63_67_fu_480),
    .din51(W_63_68_fu_484),
    .din52(W_63_69_fu_488),
    .din53(W_63_70_fu_492),
    .din54(W_63_71_fu_496),
    .din55(W_63_72_fu_500),
    .din56(W_63_73_fu_504),
    .din57(W_63_74_fu_508),
    .din58(W_63_75_fu_512),
    .din59(W_63_76_fu_516),
    .din60(W_63_77_fu_520),
    .din61(W_63_78_fu_524),
    .din62(W_63_79_fu_528),
    .din63(W_63_80_fu_532),
    .din64(tmp_66_fu_1257_p1),
    .dout(W_load_2_phi_fu_1465_p66)
);

scanhash_sha256d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_bkb_U28(
    .din0(W_63_79_fu_528),
    .din1(W_63_79_fu_528),
    .din2(W_63_79_fu_528),
    .din3(W_63_79_fu_528),
    .din4(W_63_79_fu_528),
    .din5(W_63_79_fu_528),
    .din6(W_63_79_fu_528),
    .din7(W_63_79_fu_528),
    .din8(W_63_79_fu_528),
    .din9(W_63_79_fu_528),
    .din10(W_63_79_fu_528),
    .din11(W_63_79_fu_528),
    .din12(W_63_79_fu_528),
    .din13(W_63_79_fu_528),
    .din14(W_63_79_fu_528),
    .din15(W_63_79_fu_528),
    .din16(W_15_18_fu_588),
    .din17(W_15_19_fu_592),
    .din18(W_15_20_fu_596),
    .din19(W_15_21_fu_600),
    .din20(W_15_22_fu_604),
    .din21(W_15_23_fu_608),
    .din22(W_15_24_fu_612),
    .din23(W_15_25_fu_616),
    .din24(W_15_26_fu_620),
    .din25(W_15_27_fu_624),
    .din26(W_15_28_fu_628),
    .din27(W_15_29_fu_632),
    .din28(W_15_30_fu_636),
    .din29(W_15_31_fu_640),
    .din30(W_15_fu_396),
    .din31(W_15_17_fu_400),
    .din32(W_63_fu_404),
    .din33(W_63_49_fu_408),
    .din34(W_63_50_fu_412),
    .din35(W_63_51_fu_416),
    .din36(W_63_52_fu_420),
    .din37(W_63_53_fu_424),
    .din38(W_63_54_fu_428),
    .din39(W_63_55_fu_432),
    .din40(W_63_56_fu_436),
    .din41(W_63_57_fu_440),
    .din42(W_63_58_fu_444),
    .din43(W_63_59_fu_448),
    .din44(W_63_60_fu_452),
    .din45(W_63_61_fu_456),
    .din46(W_63_62_fu_460),
    .din47(W_63_63_fu_464),
    .din48(W_63_64_fu_468),
    .din49(W_63_65_fu_472),
    .din50(W_63_66_fu_476),
    .din51(W_63_67_fu_480),
    .din52(W_63_68_fu_484),
    .din53(W_63_69_fu_488),
    .din54(W_63_70_fu_492),
    .din55(W_63_71_fu_496),
    .din56(W_63_72_fu_500),
    .din57(W_63_73_fu_504),
    .din58(W_63_74_fu_508),
    .din59(W_63_75_fu_512),
    .din60(W_63_76_fu_516),
    .din61(W_63_77_fu_520),
    .din62(W_63_78_fu_524),
    .din63(W_63_79_fu_528),
    .din64(tmp_66_fu_1257_p1),
    .dout(W_load_3_phi_fu_1669_p66)
);

scanhash_sha256d_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_cud_U29(
    .din0(block_0_read),
    .din1(block_1_read),
    .din2(block_2_read),
    .din3(block_3_read),
    .din4(block_4_read),
    .din5(block_5_read),
    .din6(block_6_read),
    .din7(block_7_read),
    .din8(block_8_read),
    .din9(block_9_read),
    .din10(block_10_read),
    .din11(block_11_read),
    .din12(block_12_read),
    .din13(block_13_read),
    .din14(block_14_read),
    .din15(block_15_read),
    .din16(W_0_fu_2065_p17),
    .dout(W_0_fu_2065_p18)
);

scanhash_sha256d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_bkb_U30(
    .din0(32'd1116352408),
    .din1(32'd1899447441),
    .din2(32'd3049323471),
    .din3(32'd3921009573),
    .din4(32'd961987163),
    .din5(32'd1508970993),
    .din6(32'd2453635748),
    .din7(32'd2870763221),
    .din8(32'd3624381080),
    .din9(32'd310598401),
    .din10(32'd607225278),
    .din11(32'd1426881987),
    .din12(32'd1925078388),
    .din13(32'd2162078206),
    .din14(32'd2614888103),
    .din15(32'd3248222580),
    .din16(32'd3835390401),
    .din17(32'd4022224774),
    .din18(32'd264347078),
    .din19(32'd604807628),
    .din20(32'd770255983),
    .din21(32'd1249150122),
    .din22(32'd1555081692),
    .din23(32'd1996064986),
    .din24(32'd2554220882),
    .din25(32'd2821834349),
    .din26(32'd2952996808),
    .din27(32'd3210313671),
    .din28(32'd3336571891),
    .din29(32'd3584528711),
    .din30(32'd113926993),
    .din31(32'd338241895),
    .din32(32'd666307205),
    .din33(32'd773529912),
    .din34(32'd1294757372),
    .din35(32'd1396182291),
    .din36(32'd1695183700),
    .din37(32'd1986661051),
    .din38(32'd2177026350),
    .din39(32'd2456956037),
    .din40(32'd2730485921),
    .din41(32'd2820302411),
    .din42(32'd3259730800),
    .din43(32'd3345764771),
    .din44(32'd3516065817),
    .din45(32'd3600352804),
    .din46(32'd4094571909),
    .din47(32'd275423344),
    .din48(32'd430227734),
    .din49(32'd506948616),
    .din50(32'd659060556),
    .din51(32'd883997877),
    .din52(32'd958139571),
    .din53(32'd1322822218),
    .din54(32'd1537002063),
    .din55(32'd1747873779),
    .din56(32'd1955562222),
    .din57(32'd2024104815),
    .din58(32'd2227730452),
    .din59(32'd2361852424),
    .din60(32'd2428436474),
    .din61(32'd2756734187),
    .din62(32'd3204031479),
    .din63(32'd3329325298),
    .din64(tmp_75_fu_2361_p1),
    .dout(tmp_34_fu_2365_p66)
);

scanhash_sha256d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
scanhash_sha256d_bkb_U31(
    .din0(W_15_18_fu_588),
    .din1(W_15_19_fu_592),
    .din2(W_15_20_fu_596),
    .din3(W_15_21_fu_600),
    .din4(W_15_22_fu_604),
    .din5(W_15_23_fu_608),
    .din6(W_15_24_fu_612),
    .din7(W_15_25_fu_616),
    .din8(W_15_26_fu_620),
    .din9(W_15_27_fu_624),
    .din10(W_15_28_fu_628),
    .din11(W_15_29_fu_632),
    .din12(W_15_30_fu_636),
    .din13(W_15_31_fu_640),
    .din14(W_15_fu_396),
    .din15(W_15_17_fu_400),
    .din16(W_63_fu_404),
    .din17(W_63_49_fu_408),
    .din18(W_63_50_fu_412),
    .din19(W_63_51_fu_416),
    .din20(W_63_52_fu_420),
    .din21(W_63_53_fu_424),
    .din22(W_63_54_fu_428),
    .din23(W_63_55_fu_432),
    .din24(W_63_56_fu_436),
    .din25(W_63_57_fu_440),
    .din26(W_63_58_fu_444),
    .din27(W_63_59_fu_448),
    .din28(W_63_60_fu_452),
    .din29(W_63_61_fu_456),
    .din30(W_63_62_fu_460),
    .din31(W_63_63_fu_464),
    .din32(W_63_64_fu_468),
    .din33(W_63_65_fu_472),
    .din34(W_63_66_fu_476),
    .din35(W_63_67_fu_480),
    .din36(W_63_68_fu_484),
    .din37(W_63_69_fu_488),
    .din38(W_63_70_fu_492),
    .din39(W_63_71_fu_496),
    .din40(W_63_72_fu_500),
    .din41(W_63_73_fu_504),
    .din42(W_63_74_fu_508),
    .din43(W_63_75_fu_512),
    .din44(W_63_76_fu_516),
    .din45(W_63_77_fu_520),
    .din46(W_63_78_fu_524),
    .din47(W_63_79_fu_528),
    .din48(W_63_80_fu_532),
    .din49(W_63_81_fu_536),
    .din50(W_63_82_fu_540),
    .din51(W_63_83_fu_544),
    .din52(W_63_84_fu_548),
    .din53(W_63_85_fu_552),
    .din54(W_63_86_fu_556),
    .din55(W_63_87_fu_560),
    .din56(W_63_88_fu_564),
    .din57(W_63_89_fu_568),
    .din58(W_63_90_fu_572),
    .din59(W_63_91_fu_576),
    .din60(W_63_92_fu_580),
    .din61(W_63_93_fu_584),
    .din62(W_63_94_fu_644),
    .din63(W_63_95_fu_648),
    .din64(tmp_75_fu_2361_p1),
    .dout(tmp_35_fu_2499_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_0_preg <= out_state_0_write_a_fu_2171_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_1_preg <= out_state_1_write_a_fu_2176_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_2_preg <= out_state_2_write_a_fu_2181_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_3_preg <= out_state_3_write_a_fu_2186_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_4_preg <= out_state_4_write_a_fu_2191_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_5_preg <= out_state_5_write_a_fu_2196_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_6_preg <= out_state_6_write_a_fu_2201_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
            ap_return_7_preg <= out_state_7_write_a_fu_2206_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_reg_806 <= a_fu_2767_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        b_reg_806 <= state_0_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_reg_796 <= b_reg_806;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_796 <= state_1_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        d1_reg_840 <= d_reg_829;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d1_reg_840 <= state_3_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        d_reg_829 <= c_reg_796;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_reg_829 <= state_2_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_851 <= e_fu_2756_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_reg_851 <= state_4_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        g_reg_861 <= f_reg_851;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        g_reg_861 <= state_5_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        h1_reg_883 <= h_reg_872;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h1_reg_883 <= state_7_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        h_reg_872 <= g_reg_861;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_reg_872 <= state_6_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_817 <= i_1_reg_3288;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_817 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_57_fu_2087_p1 == 6'd13) & ~(tmp_57_fu_2087_p1 == 6'd12) & ~(tmp_57_fu_2087_p1 == 6'd11) & ~(tmp_57_fu_2087_p1 == 6'd10) & ~(tmp_57_fu_2087_p1 == 6'd9) & ~(tmp_57_fu_2087_p1 == 6'd8) & ~(tmp_57_fu_2087_p1 == 6'd7) & ~(tmp_57_fu_2087_p1 == 6'd6) & ~(tmp_57_fu_2087_p1 == 6'd5) & ~(tmp_57_fu_2087_p1 == 6'd4) & ~(tmp_57_fu_2087_p1 == 6'd3) & ~(tmp_57_fu_2087_p1 == 6'd2) & ~(tmp_57_fu_2087_p1 == 6'd1) & ~(tmp_57_fu_2087_p1 == 6'd0) & ~(tmp_57_fu_2087_p1 == 6'd14) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_17_fu_400 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_18_fu_588 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_19_fu_592 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd2) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_20_fu_596 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd3) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_21_fu_600 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd4) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_22_fu_604 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd5) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_23_fu_608 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd6) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_24_fu_612 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd7) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_25_fu_616 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd8) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_26_fu_620 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd9) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_27_fu_624 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd10) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_28_fu_628 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd11) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_29_fu_632 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd12) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_30_fu_636 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd13) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_31_fu_640 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_fu_2087_p1 == 6'd14) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd1) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_15_fu_396 <= W_0_fu_2065_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd17) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_49_fu_408 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd18) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_50_fu_412 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd19) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_51_fu_416 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd20) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_52_fu_420 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd21) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_53_fu_424 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd22) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_54_fu_428 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd23) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_55_fu_432 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd24) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_56_fu_436 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd25) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_57_fu_440 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd26) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_58_fu_444 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd27) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_59_fu_448 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd28) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_60_fu_452 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd29) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_61_fu_456 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd30) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_62_fu_460 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd31) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_63_fu_464 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd32) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_64_fu_468 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd33) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_65_fu_472 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd34) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_66_fu_476 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd35) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_67_fu_480 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd36) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_68_fu_484 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd37) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_69_fu_488 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd38) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_70_fu_492 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd39) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_71_fu_496 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd40) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_72_fu_500 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd41) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_73_fu_504 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd42) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_74_fu_508 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd43) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_75_fu_512 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd44) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_76_fu_516 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd45) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_77_fu_520 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd46) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_78_fu_524 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd47) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_79_fu_528 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd48) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_80_fu_532 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd49) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_81_fu_536 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd50) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_82_fu_540 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd51) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_83_fu_544 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd52) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_84_fu_548 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd53) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_85_fu_552 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd54) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_86_fu_556 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd55) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_87_fu_560 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd56) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_88_fu_564 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd57) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_89_fu_568 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd58) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_90_fu_572 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd59) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_91_fu_576 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd60) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_92_fu_580 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd61) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_93_fu_584 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd62) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_94_fu_644 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_66_fu_1257_p1 == 6'd16) & ~(tmp_66_fu_1257_p1 == 6'd62) & ~(tmp_66_fu_1257_p1 == 6'd61) & ~(tmp_66_fu_1257_p1 == 6'd60) & ~(tmp_66_fu_1257_p1 == 6'd59) & ~(tmp_66_fu_1257_p1 == 6'd58) & ~(tmp_66_fu_1257_p1 == 6'd57) & ~(tmp_66_fu_1257_p1 == 6'd56) & ~(tmp_66_fu_1257_p1 == 6'd55) & ~(tmp_66_fu_1257_p1 == 6'd54) & ~(tmp_66_fu_1257_p1 == 6'd53) & ~(tmp_66_fu_1257_p1 == 6'd52) & ~(tmp_66_fu_1257_p1 == 6'd51) & ~(tmp_66_fu_1257_p1 == 6'd50) & ~(tmp_66_fu_1257_p1 == 6'd49) & ~(tmp_66_fu_1257_p1 == 6'd48) & ~(tmp_66_fu_1257_p1 == 6'd47) & ~(tmp_66_fu_1257_p1 == 6'd46) & ~(tmp_66_fu_1257_p1 == 6'd45) & ~(tmp_66_fu_1257_p1 == 6'd44) & ~(tmp_66_fu_1257_p1 == 6'd43) & ~(tmp_66_fu_1257_p1 == 6'd42) & ~(tmp_66_fu_1257_p1 == 6'd41) & ~(tmp_66_fu_1257_p1 == 6'd40) & ~(tmp_66_fu_1257_p1 == 6'd39) & ~(tmp_66_fu_1257_p1 == 6'd38) & ~(tmp_66_fu_1257_p1 == 6'd37) & ~(tmp_66_fu_1257_p1 == 6'd36) & ~(tmp_66_fu_1257_p1 == 6'd35) & ~(tmp_66_fu_1257_p1 == 6'd34) & ~(tmp_66_fu_1257_p1 == 6'd33) & ~(tmp_66_fu_1257_p1 == 6'd32) & ~(tmp_66_fu_1257_p1 == 6'd31) & ~(tmp_66_fu_1257_p1 == 6'd30) & ~(tmp_66_fu_1257_p1 == 6'd29) & ~(tmp_66_fu_1257_p1 == 6'd28) & ~(tmp_66_fu_1257_p1 == 6'd27) & ~(tmp_66_fu_1257_p1 == 6'd26) & ~(tmp_66_fu_1257_p1 == 6'd25) & ~(tmp_66_fu_1257_p1 == 6'd24) & ~(tmp_66_fu_1257_p1 == 6'd23) & ~(tmp_66_fu_1257_p1 == 6'd22) & ~(tmp_66_fu_1257_p1 == 6'd21) & ~(tmp_66_fu_1257_p1 == 6'd20) & ~(tmp_66_fu_1257_p1 == 6'd19) & ~(tmp_66_fu_1257_p1 == 6'd18) & ~(tmp_66_fu_1257_p1 == 6'd17) & (1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_95_fu_648 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_66_fu_1257_p1 == 6'd16) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0))) begin
        W_63_fu_404 <= W_16_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_3288 <= i_1_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp25_reg_3312 <= tmp25_fu_2639_p2;
        tmp_34_reg_3307 <= tmp_34_fu_2365_p66;
        tmp_51_reg_3302 <= tmp_51_fu_2355_p2;
        tmp_65_reg_3317 <= tmp_65_fu_2663_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_714)) begin
        if ((tmp_66_fu_1257_p1 == 6'd16)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_15_fu_396;
        end else if ((1'b1 == ap_condition_1805)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_93_fu_584;
        end else if ((tmp_66_fu_1257_p1 == 6'd62)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_92_fu_580;
        end else if ((tmp_66_fu_1257_p1 == 6'd61)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_91_fu_576;
        end else if ((tmp_66_fu_1257_p1 == 6'd60)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_90_fu_572;
        end else if ((tmp_66_fu_1257_p1 == 6'd59)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_89_fu_568;
        end else if ((tmp_66_fu_1257_p1 == 6'd58)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_88_fu_564;
        end else if ((tmp_66_fu_1257_p1 == 6'd57)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_87_fu_560;
        end else if ((tmp_66_fu_1257_p1 == 6'd56)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_86_fu_556;
        end else if ((tmp_66_fu_1257_p1 == 6'd55)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_85_fu_552;
        end else if ((tmp_66_fu_1257_p1 == 6'd54)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_84_fu_548;
        end else if ((tmp_66_fu_1257_p1 == 6'd53)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_83_fu_544;
        end else if ((tmp_66_fu_1257_p1 == 6'd52)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_82_fu_540;
        end else if ((tmp_66_fu_1257_p1 == 6'd51)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_81_fu_536;
        end else if ((tmp_66_fu_1257_p1 == 6'd50)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_80_fu_532;
        end else if ((tmp_66_fu_1257_p1 == 6'd49)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_79_fu_528;
        end else if ((tmp_66_fu_1257_p1 == 6'd48)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_78_fu_524;
        end else if ((tmp_66_fu_1257_p1 == 6'd47)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_77_fu_520;
        end else if ((tmp_66_fu_1257_p1 == 6'd46)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_76_fu_516;
        end else if ((tmp_66_fu_1257_p1 == 6'd45)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_75_fu_512;
        end else if ((tmp_66_fu_1257_p1 == 6'd44)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_74_fu_508;
        end else if ((tmp_66_fu_1257_p1 == 6'd43)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_73_fu_504;
        end else if ((tmp_66_fu_1257_p1 == 6'd42)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_72_fu_500;
        end else if ((tmp_66_fu_1257_p1 == 6'd41)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_71_fu_496;
        end else if ((tmp_66_fu_1257_p1 == 6'd40)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_70_fu_492;
        end else if ((tmp_66_fu_1257_p1 == 6'd39)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_69_fu_488;
        end else if ((tmp_66_fu_1257_p1 == 6'd38)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_68_fu_484;
        end else if ((tmp_66_fu_1257_p1 == 6'd37)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_67_fu_480;
        end else if ((tmp_66_fu_1257_p1 == 6'd36)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_66_fu_476;
        end else if ((tmp_66_fu_1257_p1 == 6'd35)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_65_fu_472;
        end else if ((tmp_66_fu_1257_p1 == 6'd34)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_64_fu_468;
        end else if ((tmp_66_fu_1257_p1 == 6'd33)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_63_fu_464;
        end else if ((tmp_66_fu_1257_p1 == 6'd32)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_62_fu_460;
        end else if ((tmp_66_fu_1257_p1 == 6'd31)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_61_fu_456;
        end else if ((tmp_66_fu_1257_p1 == 6'd30)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_60_fu_452;
        end else if ((tmp_66_fu_1257_p1 == 6'd29)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_59_fu_448;
        end else if ((tmp_66_fu_1257_p1 == 6'd28)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_58_fu_444;
        end else if ((tmp_66_fu_1257_p1 == 6'd27)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_57_fu_440;
        end else if ((tmp_66_fu_1257_p1 == 6'd26)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_56_fu_436;
        end else if ((tmp_66_fu_1257_p1 == 6'd25)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_55_fu_432;
        end else if ((tmp_66_fu_1257_p1 == 6'd24)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_54_fu_428;
        end else if ((tmp_66_fu_1257_p1 == 6'd23)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_53_fu_424;
        end else if ((tmp_66_fu_1257_p1 == 6'd22)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_52_fu_420;
        end else if ((tmp_66_fu_1257_p1 == 6'd21)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_51_fu_416;
        end else if ((tmp_66_fu_1257_p1 == 6'd20)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_50_fu_412;
        end else if ((tmp_66_fu_1257_p1 == 6'd19)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_49_fu_408;
        end else if ((tmp_66_fu_1257_p1 == 6'd18)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_63_fu_404;
        end else if ((tmp_66_fu_1257_p1 == 6'd17)) begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = W_15_17_fu_400;
        end else begin
            ap_phi_mux_W_load_phi_phi_fu_897_p96 = 'bx;
        end
    end else begin
        ap_phi_mux_W_load_phi_phi_fu_897_p96 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_0 = out_state_0_write_a_fu_2171_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_1 = out_state_1_write_a_fu_2176_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_2 = out_state_2_write_a_fu_2181_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_3 = out_state_3_write_a_fu_2186_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_4 = out_state_4_write_a_fu_2191_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_5 = out_state_5_write_a_fu_2196_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_6 = out_state_6_write_a_fu_2201_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
        ap_return_7 = out_state_7_write_a_fu_2206_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_1229_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_0_fu_2065_p17 = i_reg_817[3:0];

assign W_16_fu_1815_p2 = (tmp19_fu_1803_p2 + tmp20_fu_1809_p2);

assign a_fu_2767_p2 = (tmp28_fu_2762_p2 + tmp_61_fu_2750_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_condition_1805 = (~(tmp_66_fu_1257_p1 == 6'd16) & ~(tmp_66_fu_1257_p1 == 6'd62) & ~(tmp_66_fu_1257_p1 == 6'd61) & ~(tmp_66_fu_1257_p1 == 6'd60) & ~(tmp_66_fu_1257_p1 == 6'd59) & ~(tmp_66_fu_1257_p1 == 6'd58) & ~(tmp_66_fu_1257_p1 == 6'd57) & ~(tmp_66_fu_1257_p1 == 6'd56) & ~(tmp_66_fu_1257_p1 == 6'd55) & ~(tmp_66_fu_1257_p1 == 6'd54) & ~(tmp_66_fu_1257_p1 == 6'd53) & ~(tmp_66_fu_1257_p1 == 6'd52) & ~(tmp_66_fu_1257_p1 == 6'd51) & ~(tmp_66_fu_1257_p1 == 6'd50) & ~(tmp_66_fu_1257_p1 == 6'd49) & ~(tmp_66_fu_1257_p1 == 6'd48) & ~(tmp_66_fu_1257_p1 == 6'd47) & ~(tmp_66_fu_1257_p1 == 6'd46) & ~(tmp_66_fu_1257_p1 == 6'd45) & ~(tmp_66_fu_1257_p1 == 6'd44) & ~(tmp_66_fu_1257_p1 == 6'd43) & ~(tmp_66_fu_1257_p1 == 6'd42) & ~(tmp_66_fu_1257_p1 == 6'd41) & ~(tmp_66_fu_1257_p1 == 6'd40) & ~(tmp_66_fu_1257_p1 == 6'd39) & ~(tmp_66_fu_1257_p1 == 6'd38) & ~(tmp_66_fu_1257_p1 == 6'd37) & ~(tmp_66_fu_1257_p1 == 6'd36) & ~(tmp_66_fu_1257_p1 == 6'd35) & ~(tmp_66_fu_1257_p1 == 6'd34) & ~(tmp_66_fu_1257_p1 == 6'd33) & ~(tmp_66_fu_1257_p1 == 6'd32) & ~(tmp_66_fu_1257_p1 == 6'd31) & ~(tmp_66_fu_1257_p1 == 6'd30) & ~(tmp_66_fu_1257_p1 == 6'd29) & ~(tmp_66_fu_1257_p1 == 6'd28) & ~(tmp_66_fu_1257_p1 == 6'd27) & ~(tmp_66_fu_1257_p1 == 6'd26) & ~(tmp_66_fu_1257_p1 == 6'd25) & ~(tmp_66_fu_1257_p1 == 6'd24) & ~(tmp_66_fu_1257_p1 == 6'd23) & ~(tmp_66_fu_1257_p1 == 6'd22) & ~(tmp_66_fu_1257_p1 == 6'd21) & ~(tmp_66_fu_1257_p1 == 6'd20) & ~(tmp_66_fu_1257_p1 == 6'd19) & ~(tmp_66_fu_1257_p1 == 6'd18) & ~(tmp_66_fu_1257_p1 == 6'd17));
end

always @ (*) begin
    ap_condition_714 = ((1'b1 == ap_CS_fsm_state2) & (icmp_fu_1251_p2 == 1'd0) & (exitcond_fu_1229_p2 == 1'd0));
end

assign e_fu_2756_p2 = (d1_reg_840 + t0_fu_2673_p2);

assign exitcond_fu_1229_p2 = ((i_reg_817 == 7'd64) ? 1'b1 : 1'b0);

assign i_1_fu_1235_p2 = (i_reg_817 + 7'd1);

assign icmp_fu_1251_p2 = ((tmp_fu_1241_p4 == 3'd0) ? 1'b1 : 1'b0);

assign out_state_0_write_a_fu_2171_p2 = (b_reg_806 + state_0_read);

assign out_state_1_write_a_fu_2176_p2 = (c_reg_796 + state_1_read);

assign out_state_2_write_a_fu_2181_p2 = (d_reg_829 + state_2_read);

assign out_state_3_write_a_fu_2186_p2 = (d1_reg_840 + state_3_read);

assign out_state_4_write_a_fu_2191_p2 = (f_reg_851 + state_4_read);

assign out_state_5_write_a_fu_2196_p2 = (g_reg_861 + state_5_read);

assign out_state_6_write_a_fu_2201_p2 = (h_reg_872 + state_6_read);

assign out_state_7_write_a_fu_2206_p2 = (h1_reg_883 + state_7_read);

assign t0_fu_2673_p2 = (tmp25_reg_3312 + tmp24_fu_2669_p2);

assign tmp16_fu_1319_p2 = (tmp_s_fu_1315_p1 ^ tmp_17_fu_1297_p3);

assign tmp17_fu_1657_p2 = (tmp_60_fu_1653_p1 ^ tmp_30_fu_1635_p3);

assign tmp19_fu_1803_p2 = (tmp_33_fu_1663_p2 + W_load_1_phi_fu_1331_p66);

assign tmp20_fu_1809_p2 = (W_load_3_phi_fu_1669_p66 + tmp_20_fu_1325_p2);

assign tmp21_fu_2331_p2 = (tmp_45_fu_2301_p3 ^ tmp_42_fu_2279_p3);

assign tmp24_fu_2669_p2 = (tmp_51_reg_3302 + tmp_34_reg_3307);

assign tmp25_fu_2639_p2 = (tmp26_fu_2633_p2 + tmp_48_fu_2337_p2);

assign tmp26_fu_2633_p2 = (h1_reg_883 + tmp_35_fu_2499_p66);

assign tmp27_fu_2744_p2 = (tmp_56_fu_2714_p3 ^ tmp_53_fu_2692_p3);

assign tmp28_fu_2762_p2 = (tmp_65_reg_3317 + t0_fu_2673_p2);

assign tmp_12_fu_1261_p4 = {{ap_phi_mux_W_load_phi_phi_fu_897_p96[31:17]}};

assign tmp_14_fu_1275_p3 = {{tmp_67_fu_1271_p1}, {tmp_12_fu_1261_p4}};

assign tmp_15_fu_1283_p4 = {{ap_phi_mux_W_load_phi_phi_fu_897_p96[31:19]}};

assign tmp_17_fu_1297_p3 = {{tmp_68_fu_1293_p1}, {tmp_15_fu_1283_p4}};

assign tmp_18_fu_1305_p4 = {{ap_phi_mux_W_load_phi_phi_fu_897_p96[31:10]}};

assign tmp_20_fu_1325_p2 = (tmp_14_fu_1275_p3 ^ tmp16_fu_1319_p2);

assign tmp_25_fu_1599_p4 = {{W_load_2_phi_fu_1465_p66[31:7]}};

assign tmp_27_fu_1613_p3 = {{tmp_70_fu_1609_p1}, {tmp_25_fu_1599_p4}};

assign tmp_28_fu_1621_p4 = {{W_load_2_phi_fu_1465_p66[31:18]}};

assign tmp_30_fu_1635_p3 = {{tmp_71_fu_1631_p1}, {tmp_28_fu_1621_p4}};

assign tmp_31_fu_1643_p4 = {{W_load_2_phi_fu_1465_p66[31:3]}};

assign tmp_33_fu_1663_p2 = (tmp_27_fu_1613_p3 ^ tmp17_fu_1657_p2);

assign tmp_40_fu_2265_p4 = {{f_reg_851[31:6]}};

assign tmp_42_fu_2279_p3 = {{tmp_72_fu_2275_p1}, {tmp_40_fu_2265_p4}};

assign tmp_43_fu_2287_p4 = {{f_reg_851[31:11]}};

assign tmp_45_fu_2301_p3 = {{tmp_73_fu_2297_p1}, {tmp_43_fu_2287_p4}};

assign tmp_46_fu_2309_p4 = {{f_reg_851[31:25]}};

assign tmp_47_fu_2323_p3 = {{tmp_74_fu_2319_p1}, {tmp_46_fu_2309_p4}};

assign tmp_48_fu_2337_p2 = (tmp_47_fu_2323_p3 ^ tmp21_fu_2331_p2);

assign tmp_49_fu_2343_p2 = (h_reg_872 ^ g_reg_861);

assign tmp_50_fu_2349_p2 = (tmp_49_fu_2343_p2 & f_reg_851);

assign tmp_51_fu_2355_p2 = (tmp_50_fu_2349_p2 ^ h_reg_872);

assign tmp_52_fu_2678_p4 = {{b_reg_806[31:2]}};

assign tmp_53_fu_2692_p3 = {{tmp_76_fu_2688_p1}, {tmp_52_fu_2678_p4}};

assign tmp_55_fu_2700_p4 = {{b_reg_806[31:13]}};

assign tmp_56_fu_2714_p3 = {{tmp_77_fu_2710_p1}, {tmp_55_fu_2700_p4}};

assign tmp_57_fu_2087_p1 = i_reg_817[5:0];

assign tmp_58_fu_2722_p4 = {{b_reg_806[31:22]}};

assign tmp_59_fu_2736_p3 = {{tmp_78_fu_2732_p1}, {tmp_58_fu_2722_p4}};

assign tmp_60_fu_1653_p1 = tmp_31_fu_1643_p4;

assign tmp_61_fu_2750_p2 = (tmp_59_fu_2736_p3 ^ tmp27_fu_2744_p2);

assign tmp_62_fu_2645_p2 = (d_reg_829 | c_reg_796);

assign tmp_63_fu_2651_p2 = (tmp_62_fu_2645_p2 & b_reg_806);

assign tmp_64_fu_2657_p2 = (d_reg_829 & c_reg_796);

assign tmp_65_fu_2663_p2 = (tmp_64_fu_2657_p2 | tmp_63_fu_2651_p2);

assign tmp_66_fu_1257_p1 = i_reg_817[5:0];

assign tmp_67_fu_1271_p1 = ap_phi_mux_W_load_phi_phi_fu_897_p96[16:0];

assign tmp_68_fu_1293_p1 = ap_phi_mux_W_load_phi_phi_fu_897_p96[18:0];

assign tmp_70_fu_1609_p1 = W_load_2_phi_fu_1465_p66[6:0];

assign tmp_71_fu_1631_p1 = W_load_2_phi_fu_1465_p66[17:0];

assign tmp_72_fu_2275_p1 = f_reg_851[5:0];

assign tmp_73_fu_2297_p1 = f_reg_851[10:0];

assign tmp_74_fu_2319_p1 = f_reg_851[24:0];

assign tmp_75_fu_2361_p1 = i_reg_817[5:0];

assign tmp_76_fu_2688_p1 = b_reg_806[1:0];

assign tmp_77_fu_2710_p1 = b_reg_806[12:0];

assign tmp_78_fu_2732_p1 = b_reg_806[21:0];

assign tmp_fu_1241_p4 = {{i_reg_817[6:4]}};

assign tmp_s_fu_1315_p1 = tmp_18_fu_1305_p4;

endmodule //sha256_transform_1
